Data = read.delim("Invistico_Airline.csv", stringsAsFactors = FALSE)
Data
head(Data)
summary(Data)
# load dataset as 'Data'
Data = read.csv("Invistico_Airline.csv", stringsAsFactors = FALSE)
head(Data)
summary(Data)
dim(Data)
is.na(Data)
# print all column types, used for inspecting column types
for(i in 1:(ncol(Data))) {
if(is.numeric(Data[, i]) == TRUE){
cat(sprintf("column %s is numeric\n", i))
}
else if(is.factor(Data[, i]) == TRUE){
cat(sprintf("column %s is factor\n", i))
}
else{
cat(sprintf("column %s is char\n", i))
}
}
# load dataset as 'Data'
Data = read.csv("Invistico_Airline.csv", stringsAsFactors = FALSE)
# basic observations
head(Data)
summary(Data)
dim(Data)
is.na(Data)
# inspect column types
for(i in 1:(ncol(Data))) {
if(is.numeric(Data[, i]) == TRUE){
cat(sprintf("column %s is numeric\n", i))
}
else if(is.factor(Data[, i]) == TRUE){
cat(sprintf("column %s is factor\n", i))
}
else{
cat(sprintf("column %s is char\n", i))
}
}
summary(Data)
levels(Data$Customer.Type)
for(i in 1:ncol(Data)){
if(is.character(Data[, i]) == TRUE){
Data[, i] <- as.factor(Data[, i])
if(is.factor(Data[, i]) == TRUE){
cat(sprintf("feature %s has been converted into factor\n", i))
cat(sprintf("with levels: %s\n", levels(Data[, i])))
}
}
}
summary(Data)
plot_list = list()
for(i in 1:ncol(Data)){
var = names(Data)[i]
if(is.numeric(Data[, i]) == TRUE){
plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_boxplot() + labs(title = var)
# plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_histogram(bins = 10) + labs(title = var) + coord_flip()
print(plot_list[[i]])
}
else if(is.factor(Data[, i]) == TRUE){
plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_bar() + labs(title = var) + coord_flip()
print(plot_list[[i]])
}
else{
cat(sprintf("feature %s is not graphable\n", i))
}
}
library(ggplot2)
plot_list = list()
for(i in 1:ncol(Data)){
var = names(Data)[i]
if(is.numeric(Data[, i]) == TRUE){
plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_boxplot() + labs(title = var)
# plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_histogram(bins = 10) + labs(title = var) + coord_flip()
print(plot_list[[i]])
}
else if(is.factor(Data[, i]) == TRUE){
plot_list[[i]] = ggplot(Data, aes(, Data[, i])) + geom_bar() + labs(title = var) + coord_flip()
print(plot_list[[i]])
}
else{
cat(sprintf("feature %s is not graphable\n", i))
}
}
